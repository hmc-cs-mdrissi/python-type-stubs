from typing import Generic, Iterator, TypeVar

from abc import ABC, abstractmethod

_T1 = TypeVar("_T1", covariant=True)

class Sequence(Generic[_T1], ABC):
    def on_epoch_end(self) -> None: ...
    @abstractmethod
    def __getitem__(self, index: int) -> _T1: ...
    @abstractmethod
    def __len__(self) -> int: ...
    def __iter__(self) -> Iterator[_T1]: ...

def set_random_seed(seed: int) -> None: ...
